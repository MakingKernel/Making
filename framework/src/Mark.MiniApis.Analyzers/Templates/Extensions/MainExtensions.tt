// <auto-generated />
// This code was generated by Mark MiniApi Source Generator
#nullable enable

using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.DependencyInjection;
using System.Linq;

namespace Microsoft.Extensions.DependencyInjection
{
    /// <summary>
    /// MiniApi extension methods for dependency injection and API mapping
    /// </summary>
    public static partial class MiniApiExtensions
    {
        /// <summary>
        /// Register all MiniApi classes with the specified service lifetime
        /// </summary>
        /// <param name="services">The service collection</param>
        /// <param name="lifetime">The service lifetime (default: Scoped)</param>
        /// <returns>The service collection for chaining</returns>
        public static IServiceCollection AddMiniApis(this IServiceCollection services, ServiceLifetime lifetime = ServiceLifetime.Scoped)
        {
            <#= Model.DIRegistration #>
            return services;
        }

        /// <summary>
        /// Map all MiniApi endpoints to the web application
        /// </summary>
        /// <param name="webApplication">The web application</param>
        /// <returns>The web application for chaining</returns>
        public static WebApplication MapMiniApis(this WebApplication webApplication)
        {
            <# foreach(var classInfo in Model.Classes) { #>
            webApplication.Map<#= classInfo.MapMethodName #>();
            <# } #>
            return webApplication;
        }
    }
}