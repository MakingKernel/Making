<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <RootNamespace>Making.Analyzers</RootNamespace>
    </PropertyGroup>

    <!-- NuGet Package Configuration -->
    <PropertyGroup>
        <PackageId>Making.Analyzers</PackageId>
        <Description>Dependency injection source generator for the Making framework</Description>
        <PackageTags>mark, framework, dependency-injection, source-generator, roslyn</PackageTags>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>
    
    <ItemGroup>
        <None Include="README.md" Pack="true" PackagePath="\" />
    </ItemGroup>


	<ItemGroup>
		<PackageReference  PrivateAssets="all" Include="Microsoft.CodeAnalysis.Analyzers">
		</PackageReference>
		<PackageReference  PrivateAssets="all" Include="Microsoft.CodeAnalysis.CSharp" />
	</ItemGroup>

    <PropertyGroup>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <!-- Generates a package at build -->
        <IncludeBuildOutput>false</IncludeBuildOutput> <!-- Do not include the generator as a lib dependency -->
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IncludeSymbols>false</IncludeSymbols> <!-- Analyzer packages don't need symbol packages -->
    </PropertyGroup>
    
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
    
    <ItemGroup>
      <ProjectReference Include="..\Making.Core\Making.Core.csproj" />
    </ItemGroup>

</Project>
